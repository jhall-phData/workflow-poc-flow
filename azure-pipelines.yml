# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

- script: |
      set -e
      flows=($(ls flows/ | grep -v __init__.py | grep '.*\.py$'))
      echo ${flows[@]}
      prefect create project dev-workflow-poc --skip-if-exists
      for flow in ${flows[@]}; do prefect register flow --file flows/$flow --project dev-workflow-poc --skip-if-flow-metadata-unchanged; done
      prefect register flow --file orchestrating_flow.py --project dev-workflow-poc --skip-if-flow-metadata-unchanged      
  displayName: flow register